c
cl_image_tag(params[:image].tempfile, public_id: 123123)
cl_image_tag(params[:image].tempfile)
cl_image_tag(params[:image].tempfile))
temp
temp = params[:image].tempfile
c
report
c
id
c
report
params[:id]
c
params[:id]
c
params[:id]
report
state_id
state_id = State.find_by(abbreviation: params[:state]).id
report.save
report = Report.new(description: params[:description], title: params[:title], date: params[:date], state_id: state_id, votes: 0, user_id: params[:id])
c
report
c
Cloudinary::Uploader.upload(params[:image].tempfile, public_id: 2)
Cloudinary::Uploader.upload(file, public_id: 2)
Cloudinary::Uploader.upload("file", public_id: 2)
file
file = params[:image].original_filename
Cloudinary::Uploader.upload("params[:image].original_filename", public_id: 2)
params[:image].original_filename
params[:image].content_type
params[:image]
Cloudinary::Uploader.upload("params[:image].tempfile", public_id: 2)
Cloudinary::Uploader.upload("12.jpg", public_id: 1)
Cloudinary::Uploader
params[:image].tempfile
params[:image][:tempfile]
params[:image]@tempfile
params[:image][:filename]
params[:image].filename
params[:longitude]
params[:city]
params[:title]
params[:image]
params
c
params[:report]
params
c
params
c
report
c
report_params[:description]
report_params
params
geolocation_params
address_params
c
report
c
Address.new(city: address_params[:city], street: address_params[:street], zipcode: address_params[:zipcode], report_id: report.id)
report.save
Report.last
report = Report.new(description: report_params[:description], title: report_params[:title], image: report_params[:image], date: report_params[:date], state_id: state_id, votes: 0, user_id: 1)
Report.last
report = Report.new(description: report_params[:description], title: report_params[:title], image: report_params[:image], date: report_params[:date], state_id: state_id, votes: 0, user_id: user_id)
params[:id]
report = Report.new(description: report_params[:description], title: report_params[:title], image: report_params[:image], date: report_params[:date], state_id: state_id.id, votes: 0, user_id: 1)
params
c
curr_user
c
JWT.decode(auth_headers, ENV['SECRET_KEY'])
auth_headers
c
User.find(JWT.decode(auth_headers, ENV['SECRET_KEY'])[0]['user_id'])
curr_user
c
JWT.decode(auth_headers, ENV['SECRET_KEY'])[0]['user_id']
JWT.decode(auth_headers, ENV['SECRET_KEY'])[0]
JWT.decode(auth_headers, ENV['SECRET_KEY'])
c
request.headers['Authorization']
request.headers.Authorization
request.headers
JWT
JW
params
Authorization
token
c
token
c
decoded_token[0]
decoded_token
c
curr_user
params
c
params
params[:id]
params[:userId]
params[:report][:userId]
params[:report]
params[:report][:id]
params[:report]
params
State.find_by(abbreviation: "NY").id
state_id.id
state_id
geolocation_params
address_params
report_params
c
params
c
params
c
params[:report][:report]
params[:report]
params
c
report
State.find(37)
    report = Report.new(description: report_params[:description], title: report_params[:title], image: report_params[:image], date: report_params[:date], state_id: state_id.id, votes: 0)
    report = Report.new(description: report_params[:description], title: report_params[:title], image: report_params[:image], date: report_params[:date], state_id: state_id, votes: 0)
    report = Report.new(description: report_params[:description], title: report_params[:title], image: report_params[:image], date: report_params[:date], state_id: state_id, vote: 0)
geolocation_params
report_params
address_params
c
state = State.find_by(abbreviation: params[:address][:state])
State.last
state = State.find_by(abbreviation: params[:addres][:state])
params[:report][:image]
report
repor]
Report.last
params[:report][:description]
params[:report].description
params[:geolocation]
params[:address]
params[:report]
params
c
params
params[:report]
c
report = params[:report][:report]
params
report
report = params[:report]
params[:report]
params
c
State.find_by(name: params[:id]).reports.length
State.find_by(name: params[:id]).reports
State.find_by(name: params[:id])
params
c
params
c
params
params[:id]
State.find_by(name: params[:id])
State.find_by(name: params[:id]).reports
c
params
c
params
c
report1.id
report1 = ReportSerializer.new(reports[1])
report1.state_id
report1
report1.user
report.user
report1 = ReportSerializer.new(reports[1])
ReportSerializer.new(reports[1])
reports[1]
ReportSerializer(reports)
ReportSerializer(reports[0])
reports[1]
reports
c
State.find_by(name: params[:id]).reports
State.find_by(name: params[:id])
params[:id]
params[:id}
=> 28:     reports = State.find_by(name: params[:id])
params
reports
=> 28:     reports = State.find_by(name: 'California')
=> 28:     reports = State.find_by(name: params[:id])
c
exit
c
user
c
User.find_by(username: '123')
user
c
user_id
C
c
params[:user]
user
c
params[:user]
params
c
report.votes
c
report.votes
vote
c
params[:vote]
params[:vote}
params
c
report.save
report.votes
report.votes += 1
report.votes
    report = Report.find_by(id: params[:reportId])
report
    report = Reports.find_by(id: params[:reportId])
params[:reportId]
params
c
params
